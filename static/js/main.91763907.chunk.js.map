{"version":3,"sources":["component/card/index.js","App.js","reportWebVitals.js","index.js","component/card/index.module.css"],"names":["Card","user","largeImageURL","collections","comments","downloads","views","likes","id","type","tags","className","cardStyles","card","imgCont","src","style","height","width","infoCont","class","secDiv","App","useState","Rdata","setRdata","useEffect","a","XMLHttpRequest","addEventListener","JSON","parse","responseText","hits","slice","open","send","dataFetch","console","log","length","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yPA0CeA,EAxCF,SAAC,GAWP,IAVLC,EAUI,EAVJA,KACAC,EASI,EATJA,cACAC,EAQI,EARJA,YACAC,EAOI,EAPJA,SACAC,EAMI,EANJA,UACAC,EAKI,EALJA,MACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,GACAC,EAEI,EAFJA,KACAC,EACI,EADJA,KAEA,OACE,sBAAKC,UAAWC,IAAWC,KAA3B,UACE,qBAAKF,UAAWC,IAAWE,QAA3B,SACE,qBACEC,IAAKb,EACLc,MAAO,CAAEC,OAAQ,MAAOC,MAAO,WAGnC,sBAAKP,UAAWC,IAAWO,SAA3B,UACE,6BAAI,+BAAOlB,MACX,+BAAI,uCAAUO,KAAU,+BAAOC,OAC/B,gCACE,gCAAK,mBAAGW,MAAM,oBAAd,YACA,gCAAK,mBAAGA,MAAM,qBAAd,iBAGJ,sBAAKT,UAAWC,IAAWS,OAA3B,UACM,uCAAUX,KACV,+CAAkBP,KAClB,4CAAeC,KACf,6CAAgBC,KAChB,yCAAYC,KACZ,yCAAYC,YCNTe,MA1Bf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAFAC,qBAAU,kBAbQ,WAChB,IAAIC,EAAI,IAAIC,eACZD,EAAEE,iBAAiB,QAAQ,kBACzBJ,EAASK,KAAKC,MAAMJ,EAAEK,cAAcC,KAAKC,MAAM,EAAG,QAEpDP,EAAEQ,KACA,MACA,4HACA,GAEFR,EAAES,OAGYC,KAAa,IAG3B,sBAAK1B,UAAU,MAAf,UACG2B,QAAQC,IAAIf,GACZA,EAAMgB,QAAUhB,EAAMiB,KAAI,SAACd,GAAD,OAAO,cAAC,EAAD,eAAUA,WCbnCe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,sBAAsB,SAAW,uBAAuB,OAAS,wB","file":"static/js/main.91763907.chunk.js","sourcesContent":["import cardStyles from \"./index.module.css\";\r\n\r\nconst Card = ({\r\n  user,\r\n  largeImageURL,\r\n  collections,\r\n  comments,\r\n  downloads,\r\n  views,\r\n  likes,\r\n  id,\r\n  type,\r\n  tags\r\n}) => {\r\n  return (\r\n    <div className={cardStyles.card}>\r\n      <div className={cardStyles.imgCont}>\r\n        <img\r\n          src={largeImageURL}\r\n          style={{ height: \"70%\", width: \"70%\" }}\r\n        ></img>\r\n      </div>\r\n      <div className={cardStyles.infoCont}>\r\n        <h4><span>{user}</span></h4>\r\n        <h5><span>id:{id}</span><span>{type}</span></h5>\r\n        <div>\r\n          <div><i class=\"far fa-envelope\"></i> Email</div>\r\n          <div><i class=\"fas fa-phone-alt\"></i> Call</div>\r\n        </div>\r\n      </div>\r\n      <div className={cardStyles.secDiv} >\r\n            <h5>tags:{tags}</h5>\r\n            <h5>Collections: {collections}</h5>\r\n            <h5>Comments: {comments}</h5>\r\n            <h5>Downloads: {downloads}</h5>\r\n            <h5>Views: {views}</h5>\r\n            <h5>Likes: {likes}</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Card from \"./component/card\";\n\nfunction App() {\n  const [Rdata, setRdata] = useState([]);\n\n  const dataFetch = () => {\n    let a = new XMLHttpRequest();\n    a.addEventListener(\"load\", () =>\n      setRdata(JSON.parse(a.responseText).hits.slice(0, 10))\n    );\n    a.open(\n      \"Get\",\n      \"https://pixabay.com/api/?key=13590376-d01056b8c3b3030d4ab3d38a5&q=yellow+flowers&image_type=photo&pretty=true/?_limit=10\",\n      true\n    );\n    a.send();\n  };\n\n  useEffect(() => dataFetch(), []);\n\n  return (\n    <div className=\"App\">\n      {console.log(Rdata)}\n      {Rdata.length && Rdata.map((a) => <Card {...a}></Card>)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card_card__3wGxd\",\"imgCont\":\"card_imgCont__3zwJH\",\"infoCont\":\"card_infoCont__2TPGX\",\"secDiv\":\"card_secDiv__1rppp\"};"],"sourceRoot":""}